services:
  app:
    build:
      context: .
    restart: always
    volumes:
      - recipick-static-data:/vol/web
      - rp-huggingface-cache:/vol/cache
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - REDIS_HOST=${REDIS_HOST}
      - HF_MODEL_NAME=${HF_MODEL_NAME}
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - CORS_ALLOWED_ORIGINS=${DJANGO_CORS_ALLOWED_ORIGINS}
    depends_on:
      - db
      - redis

  redis:
    image: redis:alpine
    restart: always

  db:
    image: postgres:13-alpine
    restart: always
    volumes:
      - recipick-postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}

  proxy:
    build:
      context: ./proxy
    restart: always
    depends_on:
      - app
    ports:
      - 80:8000
    volumes:
      - recipick-static-data:/vol/static

volumes:
  recipick-static-data:
  rp-huggingface-cache:
  recipick-postgres-data: